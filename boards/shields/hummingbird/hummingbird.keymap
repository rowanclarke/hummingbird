#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define KEYS_L  0  1  2  3  4  5  6  7  8  9 10 11 12
#define KEYS_R 19 20 21 22 23 24 25 26 27 28 29 30 31
#define THUMBS 13 14 15 16 17 18

#define DEFAULT  0
#define SYMBOL   1
#define FUNCTION 2

/ {
    behaviours {
        htl: hold-tap-left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };

        htr: hold-tap-right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &htl LALT Q
                &kp W
                &kp E
                &kp R
                &kp T
                &kp Y
                &kp U
                &kp I
                &kp O
                &htr RALT P

                &htl LGUI Z
                &htl LSHIFT A
                &htl LCTRL S
                &kp D
                &kp F
                &kp G
                &kp H
                &htr RCTRL J
                &htr RSHIFT K
                &htr RGUI L

                &kp X
                &kp C
                &kp V
                &kp B
                &kp N
                &kp M

                &lt SYMBOL ESC
                &kp BSPC
                &kp SPACE
                &lt FUNCTION RET
            >;
        };

        symbol_layer {
            bindings = <
                &htl LALT N1
                &kp N2
                &kp N3
                &kp N4
                &kp N5
                &kp N6
                &kp N7
                &kp N8
                &kp N9
                &htr RALT N0

                &htl LGUI KP_EQUAL
                &htl LSHIFT KP_DIVIDE
                &htl LCTRL KP_MULTIPLY 
                &kp KP_MINUS 
                &kp KP_PLUS
                &kp SEMI
                &kp APOS
                &htr RCTRL COMMA
                &htr RSHIFT PERIOD
                &htr RGUI SLASH

                &trans
                &trans
                &trans
                &trans
                &trans
                &trans

                &trans
                &trans
                &trans
                &trans
            >;            
        };

        function_layer {
            bindings = <
                &htl LALT F1
                &kp F2
                &kp F3
                &kp F4
                &kp F5
                &kp F6
                &kp F7
                &kp F8
                &kp F9
                &kp F10

                &htl LGUI HOME
                &htl LSHIFT PG_DN
                &htl LCTRL PG_UP
                &kp END
                &kp F11
                &kp F12
                &kp LEFT
                &kp DOWN
                &kp UP
                &kp RIGHT

                &bt BT_CLR
                &bt BT_NXT
                &bt BT_PRV
                &trans
                &trans
                &trans

                &trans
                &trans
                &trans
                &trans
            >;            
        };
    };
};
