meta:
  engine: 4.1.0
units:
  ux: 17
  uy: 17
  ur: 2
  cx: 14
  cy: 14
  cr: 0.5
  e: 0.2
  p: 0.5
  m: 2
  kx: ux + p
  ky: uy + p
  pitch: 2.54
  mcu_width: 17.78
  mcu_height: 33.02
  mcu_padding: 2
  switch_width: 6.7
  switch_height: 2.7
  battery_width: 30
  battery_height: 10
  cover_depth: 2.2
  head_diameter: 3.2
  thread_diameter: 1.4
  insert_length: 1.5
  insert_diameter: 2.3
  pinky_stagger: ky/4
  pinky_spread: 2
  pinky_splay: 5
  sec_half_pinky_splay: 1.0009526851633
  cot_pinky_splay: 11.430052
  mounthole_dist: cot_pinky_splay * pinky_spread - pinky_stagger
  ring_spread: 0
  ring_splay: 3
  thumb_distance: 14
  reachy_splay: 5
  switch_cover_depth: 2
  switch_pin_depth: 1.5
points:
  rotate: pinky_splay + ring_splay
  key:
    width: ux
    height: uy
    spread: kx
    padding: ky
    autobind: 0
  zones:
    matrix:
      rows:
        bottom:
        home:
        top:
      columns:
        pinky:
        ring.key:
          stagger: ky + pinky_stagger
          spread: kx + pinky_spread
          splay: -pinky_splay
          origin: [-kx/2, -ky/2]      
        middle.key:
          stagger: ky/4
          spread: kx + ring_spread
          splay: -ring_splay
          origin: [-kx/2, -ky/2]
        index.key.stagger: -ky/4
        inner.key.stagger: -ky/2
        pinky.rows:
          top.net: "P15"
          home.net: "P5"
          bottom.skip: true
        ring.rows:
          top.net: "P18"
          home.net: "P14"
          bottom.net: "P6"
        middle.rows:
          top.net: "P19"
          home.net: "P16"
          bottom.net: "P7"
        index.rows:
          top.net: "P20"
          home.net: "P10"
          bottom.net: "P8"
        inner.rows:
          bottom.skip: true
          top.net: "P21"
          home.net: "P9"
        pinky.rows.top.bind: [0, kx, kx/2, 0]
        ring.key.bind: [0, kx/2, kx/2, 0]
        ring.rows.bottom.bind: [0, kx, 0, kx/2]
        middle.rows.home.bind: [kx/2, kx/2, kx/2, 0]
        index.rows.bottom.bind: [0, kx/2, 0, kx]
        index.rows.home.bind: [kx/2, kx/2, kx/2, 0]
        index.rows.top.bind: [0, 0, kx/2, kx/2]
        inner.rows.top.bind: [0, 0, 0, kx/2]
    thumb:
      anchor:
        ref: matrix_inner_bottom
        shift: [0, -thumb_distance]
      columns:
        tucky:
        reachy.key:
          stagger: 0
          splay: -5
          origin: [-kx/2, -ky/2]
        tucky.key.net: "P4"
        reachy.key.net: "P3"
        tucky.key.bind: [2ky, kx/2, 0, 0]
        reachy.key.bind: [0, 0, 0, kx/2]
    mcu:
      anchor:
        ref: matrix_inner_home
        shift: [ux/2 + mcu_width/2 + mcu_padding, 3uy/2 - mcu_height/2 + p]
      key:
        width: mcu_width
        height: mcu_height
        bind: [0, 0, 3ky/2, kx]
    switch.anchor:
      ref: matrix_inner_top
      shift: [0, ux/2 + m - (switch_cover_depth + switch_pin_depth + switch_height / 2)]
    battery.anchor:
      - aggregate.parts: [matrix_inner_home, thumb_tucky]
      - shift: [mcu_width/2 + mcu_padding/2, 0]
    battery_terminal.anchor:
      - ref: battery
        shift: [battery_width/2, battery_height/2]
      - shift: [-pitch/2, 3.73/2]
    mounthole_left.anchor:
      - aggregate.parts: [matrix_inner_home, thumb_tucky]
      - shift: [-ux/2 + head_diameter/2, 0]
    mounthole_right.anchor:
      - aggregate.parts: [matrix_inner_home, thumb_tucky]
        shift: [ux/2 + mcu_width + mcu_padding - head_diameter/2, 0]
    mounthole_pinky.anchor:
      - ref: matrix_pinky_home
        shift: [kx/2, -ky/2 - mounthole_dist]
        rotate: -pinky_splay/2
      - shift: [0, sec_half_pinky_splay * (2ky + mounthole_dist - head_diameter/2)]
outlines:
  mounthole:
    - what: circle
      radius: head_diameter/2 + e/2
      where:
        - /mounthole/
  insert:
    - what: circle
      radius: insert_diameter/2
      where:
        - /mounthole/
  switch:
    - what: rectangle
      size: [switch_width, switch_height]
      where: /switch/
  switch_plate:
    - what: rectangle
      size: [12.7, 1.5]
      adjust.shift: [0, switch_height/2 + switch_pin_depth/2]
      where: /switch/
    - what: rectangle
      size: [5.2, 2]
      adjust.shift: [0, switch_height/2 + switch_pin_depth + 1]
      where: /switch/
    - what: rectangle
      size: [1.3, 1.6]
      adjust.shift: [0, switch_height/2 + switch_pin_depth/2 - 0.05]
      where: /switch/
      operation: subtract
  _switch_zone:
    - what: rectangle
      size: [switch_width + 1.6, switch_height + 1.25]
      adjust.shift: [0, -1.25/2]
      where: /switch/
    - what: outline
      name: switch_plate
      adjust.shift: [-0.75, 0]
    - what: outline
      name: switch_plate
      adjust.shift: [0.75, 0]
  switch_zone:
    - what: outline
      name: _switch_zone
      expand: e/2
      joints: pointy
  key_shaft:
    - what: circle
      radius: 3.429/2
      where:
        - /matrix/
        - /thumb/
    - what: circle
      radius: 1.7018/2
      adjust.shift: [-5.5, 0]
      where:
        - /matrix/
        - /thumb/
    - what: circle
      radius: 1.7018/2
      adjust.shift: [5.5, 0]
      where:
        - /matrix/
        - /thumb/
  _key_caps:
    - what: rectangle
      size: [ux, uy]
      corner: ur
      where:
        - /matrix/
        - /thumb/
      operation: stack
  keys:
    - what: rectangle
      size: [cx, cy]
      corner: cr
      where:
        - /matrix/
        - /thumb/
      operation: stack
  _hotswap_housing:
    - what: polygon
      points:
        - shift: [-3.5757359303559646, 2.7]
        - shift: [-0.212132035, 0.087867966]
        - shift: [-0.674264068, 0.674264068]
        - shift: [-0.08786796564403598, 0.21213203435596428]
        - shift: [0.0, 2.751471862]
        - shift: [0.08786796564403598, 0.21213203435596384]
        - shift: [0.674264068, 0.674264068]
        - shift: [0.21213203435596428, 0.08786796564403598]
        - shift: [0.17573593058494108, 0]
        - shift: [1.1, 1.2]
        - shift: [0.0, 2.9]
        - shift: [0.8, 0.8]
        - shift: [3.0, 0.0]
        - shift: [0.8, -0.8]
        - shift: [0.0, -3.3]
        - shift: [-0.7, -0.9552681893175716]
        - shift: [-1.45, -1.6947318104457443]
        - shift: [0, -1.87573593058517]
        - shift: [-0.08786796564403573, -0.21213203435596428]
        - shift: [-0.674264068, -0.674264068]
        - shift: [-0.21213203435596428, -0.08786796564403554]
    - what: circle
      adjust.shift: [-3.575735931, 3.0]
      radius: 0.3
    - what: circle
      adjust.shift: [-0.824264069, 3.0]
      radius: 0.3
    - what: circle
      adjust.shift: [-0.15, 3.674264069]
      radius: 0.3
    - what: circle
      adjust.shift: [2.235489027, 5.233341558]
      radius: 2.109392579
      operation: subtract
    - what: circle
      adjust.shift: [1.298187633, 8.2]
      radius: 1.001812367
    - what: circle
      adjust.shift: [1.5, 11.5]
      radius: 0.8
    - what: circle
      adjust.shift: [-1.5, 11.5]
      radius: 0.8
    - what: circle
      adjust.shift: [-3.504545455, 8.6]
      radius: 1.204545455
      operation: subtract
    - what: circle
      adjust.shift: [-3.575735931, 7.1]
      radius: 0.3
    - what: circle
      adjust.shift: [-4.25, 6.425735931]
      radius: 0.3
    - what: circle
      adjust.shift: [-4.25, 3.674264069]
      radius: 0.3
    - what: polygon
      points:
        - shift: [0.15, 3.674264069]
        - shift: [0, 3.725735931]
        - shift: [-3.725735931, 0]
  hotswap:
    - what: outline
      name: _hotswap_housing
      where:
        - /matrix/
        - /thumb/
      origin:
        - shift: [-3.5757359303559646, 2.7]
        - rotate: 90
        - shift: [5 + 2.35, 3.75 + 0.974264069 - 2.35]
      expand: e
    - what: rectangle
      where:
        - /matrix/
        - /thumb/
      size: 2.6
      adjust.shift: [-8.275, -3.75]
    - what: rectangle
      where:
        - /matrix/
        - /thumb/
      size: 2.6
      adjust.shift: [3.275, -5.95]
  _key_sink:
    - what: circle
      radius: 1.7145
    - what: circle
      radius: 0.8509
      adjust.shift: [-5.5, 0]
    - what: circle
      radius: 0.8509
      adjust.shift: [5.5, 0]
  key_sink:
    - what: outline
      name: _key_sink
      where:
        - /matrix/
        - /thumb/
  battery:
    - what: rectangle
      size: [30, 10]
      where: battery
  battery_zone:
    - what: rectangle
      size: [2*pitch, 8.73]
      where: battery
      adjust.shift: [battery_width/2 - pitch, 8.73/2]
  battery_pin_zone:
    - what: rectangle
      size: [2*pitch, 3.73]
      where: battery
      adjust.shift: [battery_width/2 - pitch, battery_height/2 + 3.73/2]
  mcu:
    - what: rectangle
      size: [mcu_width - 2 * pitch, mcu_height]
      where: mcu
  mcu_zone:
    - what: outline
      name: mcu
      expand: e
      joints: pointy
  mcu_pins_zone:
    - what: rectangle
      size: [pitch, mcu_height]
      adjust.shift: [-mcu_width/2 + pitch/2, 0]
      where: mcu
    - what: rectangle
      size: [pitch, mcu_height]
      adjust.shift: [mcu_width/2 - pitch/2, 0]
      where: mcu
      expand: e
      joints: pointy
  cover:
    - what: rectangle
      size: [kx, ky]
      corner: m + p/2
      where:
        - /matrix/
        - /thumb/
      bound: true
    - what: rectangle
      size: [mcu_width + p, mcu_height + p]
      corner: m + p/2
      where: mcu
      bound: true
    - what: rectangle
      size: [kx, 5ky/2]
      where: thumb_reachy
      adjust.shift: [kx, ky]
      operation: subtract
      expand: m - p/2
  board:
    - what: outline
      name: cover
    - what: outline
      name: battery
      operation: subtract
    - what: outline
      name: mcu
      operation: subtract
    - what: rectangle
      size: [9, 5]
      where: mcu
      adjust.shift: [0, mcu_height/2]
      operation: subtract
pcbs:
  hummingbird:
    template: kicad8
    outlines:
      main:
        outline: board
      key_caps:
        outline: _key_caps
        layer: Dwgs.User
      keys:
        outline: keys
        layer: Dwgs.User
      battery:
        outline: battery_zone
        layer: Dwgs.User
      # hotswap:
      #   outline: hotswap
      #   layer: Dwgs.User
      key_sink:
        outline: key_sink
        layer: Dwgs.User
      cover:
        outline: cover
        layer: Dwgs.User
      insert:
        outline: insert
        layer: Dwgs.User
    footprints:
      rotated_switches:
        what: choc
        where:
          - /matrix/
          - /thumb/
        adjust.rotate: 180
        params:
          from: GND
          to: "{{net}}"
          keycaps: false
          hotswap: true
      rotated_reversed_switches:
        what: choc
        where:
          - /matrix/
          - /thumb/
        adjust.rotate: 180
        params:
          from: GND
          to: "{{net}}"
          keycaps: false
          hotswap: true
          reverse: true
      mcu:
        what: nicenano
        where: mcu
        adjust.rotate: 270
        params:
          orientation: down
          GND: "NEG"
          RST: ""
          VCC: ""
          P1: ""
          P0: ""
      battery:
        what: lipo
        where: battery
        params:
          LIVE: LIVE
          GND: GND
      switch:
        what: switch
        where: /switch/
        params:
          left: RAW
          right: ""
          common: LIVE
          reverse: true
      reversed_switch:
        what: switch
        where: /switch/
        params:
          left: NEG
          right: ""
          common: LIVE
      mounthole:
        what: mounthole
        where: /mounthole/
        params:
          thread: thread_diameter + e
          head: head_diameter  
      ground_mask:
        what: mask
        where: mcu
        adjust:
          shift: [-mcu_width/2 - pitch/8, mcu_height/2 - pitch/2]
        params:
          width: pitch/4
          height: pitch/2
          net: GND
      reversed_ground_mask:
        what: mask
        where: mcu
        adjust:
          shift: [mcu_width/2 + pitch/8, mcu_height/2 - pitch/2]
        params:
          width: pitch/4
          height: pitch/2
          net: GND
          reverse: true
